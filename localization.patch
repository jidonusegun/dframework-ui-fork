diff --git a/src/lib/components/Grid/GridPreference.js b/src/lib/components/Grid/GridPreference.js
index 3b06eca..a1d7d44 100644
--- a/src/lib/components/Grid/GridPreference.js
+++ b/src/lib/components/Grid/GridPreference.js
@@ -250,10 +250,10 @@ const GridPreferences = ({ tTranslate, preferenceName, gridRef, columns = [], se
                 aria-haspopup="true"
                 aria-expanded={menuAnchorEl ? 'true' : undefined}
                 onClick={handleOpen}
-                title={tTranslate('Preference', tOpts)}
+                title={tTranslate('Preference', tOpts)} 
                 startIcon={<SettingsIcon />}
             >
-                {tTranslate('Preferences', tOpts)}
+                {tTranslate('Preferences', tOpts)} 
             </Button>
             <Menu
                 id={`grid-preference-menu`}
@@ -279,10 +279,10 @@ const GridPreferences = ({ tTranslate, preferenceName, gridRef, columns = [], se
                 }}
             >
                 <MenuItem component={ListItemButton} dense onClick={() => openModal(formTypes.Add)}>
-                    {tTranslate('Add Preference', tOpts)}
+                    {tTranslate('Add Preference', tOpts)} 
                 </MenuItem>
                 <MenuItem component={ListItemButton} dense divider={preferences?.length > 0} onClick={() => openModal(formTypes.Manage, false)}>
-                    {tTranslate('Manage Preferences', tOpts)}
+                    {tTranslate('Manage Preferences', tOpts)} 
                 </MenuItem>
 
                 {preferences?.length > 0 && preferences?.map((ele, key) => {
@@ -292,10 +292,10 @@ const GridPreferences = ({ tTranslate, preferenceName, gridRef, columns = [], se
                             onClick={() => applySelectedPreference(prefId, key)}
                             component={ListItem}
                             key={`pref-item-${key}`}
-                            title={tTranslate(prefDesc, tOpts)}
+                            title={tTranslate(prefDesc, tOpts)} 
                             dense
                         >
-                            <ListItemText primary={tTranslate(prefName, tOpts)} />
+                            <ListItemText primary={tTranslate(prefName, tOpts)} /> 
                         </MenuItem>
                     )
                 })}
@@ -304,7 +304,7 @@ const GridPreferences = ({ tTranslate, preferenceName, gridRef, columns = [], se
                 <DialogTitle sx={{ backgroundColor: '#e0e0e0', mb: 2 }}>
                     <Stack direction="row" columnGap={2}>
                         <Typography variant="h5" >
-                            {formType} {tTranslate('Preference', tOpts)}
+                            {formType} {tTranslate('Preference', tOpts)} 
                         </Typography>
                     </Stack>
                 </DialogTitle>
@@ -326,11 +326,11 @@ const GridPreferences = ({ tTranslate, preferenceName, gridRef, columns = [], se
                         >
                             <Grid item xs={12}>
                                 <TextField
-                                    defaultValue={tTranslate(formik.values.prefName, tOpts)}
+                                    defaultValue={tTranslate(formik.values.prefName, tOpts)} 
                                     variant="outlined"
                                     size="small"
                                     margin="dense"
-                                    label={tTranslate('Preference Name', tOpts)}
+                                    label={tTranslate('Preference Name', tOpts)} 
                                     name={'prefName'}
                                     onChange={formik.handleChange}
                                     error={!!formik.errors.prefName}
@@ -341,13 +341,13 @@ const GridPreferences = ({ tTranslate, preferenceName, gridRef, columns = [], se
                             </Grid>
                             <Grid item xs={12}>
                                 <TextField
-                                    defaultValue={tTranslate(formik.values.prefDesc, tOpts)}
+                                    defaultValue={tTranslate(formik.values.prefDesc, tOpts)} 
                                     variant="outlined"
                                     multiline
                                     rows={2}
                                     size="small"
                                     margin="dense"
-                                    label={tTranslate('Preference Description', tOpts)}
+                                    label={tTranslate('Preference Description', tOpts)} 
                                     name={'prefDesc'}
                                     onChange={formik.handleChange}
                                     error={!!formik.errors.prefDesc}
@@ -364,7 +364,7 @@ const GridPreferences = ({ tTranslate, preferenceName, gridRef, columns = [], se
                                             onChange={formik.handleChange}
                                         />
                                     }
-                                    label={tTranslate('Default', tOpts)}
+                                    label={tTranslate('Default', tOpts)} 
                                 />
                             </Grid>
                             <Grid item xs={12}>
@@ -377,7 +377,7 @@ const GridPreferences = ({ tTranslate, preferenceName, gridRef, columns = [], se
                                         variant="contained"
                                         disableElevation
                                     >
-                                        {tTranslate('Save', tOpts)}
+                                        {tTranslate('Save', tOpts)} 
                                     </Button>
                                     <Button
                                         type="button"
@@ -388,7 +388,7 @@ const GridPreferences = ({ tTranslate, preferenceName, gridRef, columns = [], se
                                         onClick={handleDialogClose}
                                         disableElevation
                                     >
-                                        {tTranslate('Close', tOpts)}
+                                        {tTranslate('Close', tOpts)} 
                                     </Button>
                                 </Stack>
                             </Grid>
@@ -436,18 +436,18 @@ const GridPreferences = ({ tTranslate, preferenceName, gridRef, columns = [], se
                 {formType === formTypes.Manage && (
                     <DialogActions>
                         <Button color="error" variant="contained" size="small" onClick={() => closeModal()} disableElevation>
-                            {tTranslate('Close', tOpts)}
+                            {tTranslate('Close', tOpts)} 
                         </Button>
                     </DialogActions>
                 )}
             </Dialog>
             <Dialog open={openPreferenceExistsModal} maxWidth='xs' fullWidth>
                 <DialogContent sx={{ fontSize: '16px' }}>
-                    "{prefName}" {tTranslate('name already in use, please use another name.', tOpts)}
+                    "{prefName}" {tTranslate('name already in use, please use another name.', tOpts)} 
                 </DialogContent>
                 <DialogActions sx={{ justifyContent: 'center', marginTop: '4%' }}>
                     <Button color="success" variant="contained" size="small" onClick={() => setOpenPreferenceExistsModal(false)} disableElevation>
-                        {tTranslate('Ok', tOpts)}
+                        {tTranslate('Ok', tOpts)} 
                     </Button>
                 </DialogActions>
             </Dialog>
diff --git a/src/lib/components/Grid/footer.js b/src/lib/components/Grid/footer.js
index 3210252..6bdd4cb 100644
--- a/src/lib/components/Grid/footer.js
+++ b/src/lib/components/Grid/footer.js
@@ -9,7 +9,7 @@ import Button from '@mui/material/Button';
 import { useTranslation } from 'react-i18next';
 import React, { useEffect, useState } from 'react';
 import { useStateContext } from '../useRouter/StateProvider';
-const Footer = ({ pagination, apiRef, tTranslate }) => {
+const Footer = ({ pagination, apiRef, tTranslate }) => { 
     const page = apiRef.current.state.pagination.paginationModel.page;
     const rowsPerPage = apiRef.current.state.pagination.paginationModel.pageSize;
     const totalRows = apiRef.current.state.rows.totalRowCount;
@@ -57,7 +57,7 @@ const Footer = ({ pagination, apiRef, tTranslate }) => {
             <Box sx={{ pl: 5 }}>
                 {pagination &&
                     <>
-                        <Typography variant="p">{tTranslate('Jump to page', tOpts)}:</Typography>
+                        <Typography variant="p">{tTranslate('Jump to page', tOpts)}:</Typography> 
                         <TextField
                             sx={{ width: 70, pl: 1 }}
                             variant="standard"
@@ -68,7 +68,7 @@ const Footer = ({ pagination, apiRef, tTranslate }) => {
                             onKeyPress={handleKeyPress}
                             disabled={!totalRows}
                         />
-                        <Button disabled={!totalRows} size='small' onClick={onPageChange}>{tTranslate('Go', tOpts)}</Button>
+                        <Button disabled={!totalRows} size='small' onClick={onPageChange}>{tTranslate('Go', tOpts)}</Button> 
                     </>
                 }
             </Box>
diff --git a/src/lib/components/Grid/index.js b/src/lib/components/Grid/index.js
index 3a1ba7c..0b36eb8 100644
--- a/src/lib/components/Grid/index.js
+++ b/src/lib/components/Grid/index.js
@@ -92,7 +92,7 @@ const ExportMenuItem = ({tTranslate, tOpts, handleExport, contentType, type, isP
             data-content-type={contentType}
             data-is-pivot-export={isPivotExport}
         >
-            {tTranslate("Export", tOpts)} {type.charAt(0).toUpperCase() + type.slice(1).toLowerCase()}
+            {tTranslate("Export", tOpts)} {type.charAt(0).toUpperCase() + type.slice(1).toLowerCase()} 
         </MenuItem>
     );
 };
@@ -354,7 +354,7 @@ const GridBase = memo(({
             if (column.link) {
                 overrides.cellClassName = "mui-grid-linkColumn";
             }
-            finalColumns.push({ headerName: model?.tTranslate(column.headerName || column.label, tOpts), ...column, ...overrides });
+            finalColumns.push({ headerName: model?.tTranslate(column.headerName || column.label, tOpts), ...column, ...overrides }); 
             if (column.pinned) {
                 pinnedColumns[column.pinned === 'right' ? 'right' : 'left'].push(column.field);
             }
@@ -633,8 +633,8 @@ const GridBase = memo(({
                     justifyContent: 'space-between'
                 }}
             >
-                {model.gridSubTitle && <Typography variant="h6" component="h3" textAlign="center" sx={{ ml: 1 }}> {model?.tTranslate(model.gridSubTitle, tOpts)}</Typography>}
-                {currentPreference && <Typography className="preference-name-text" variant="h6" component="h6" textAlign="center" sx={{ ml: 1 }} >{model?.tTranslate('Applied Preference', tOpts)} - {currentPreference}</Typography>}
+                {model.gridSubTitle && <Typography variant="h6" component="h3" textAlign="center" sx={{ ml: 1 }}> {model?.tTranslate(model.gridSubTitle, tOpts)}</Typography>} 
+                {currentPreference && <Typography className="preference-name-text" variant="h6" component="h6" textAlign="center" sx={{ ml: 1 }} >{model?.tTranslate('Applied Preference', tOpts)} - {currentPreference}</Typography>} 
                 {(isReadOnly || (!effectivePermissions.add && !forAssignment)) && <Typography variant="h6" component="h3" textAlign="center" sx={{ ml: 1 }} > {isReadOnly ? "" : model.title}</Typography>}
                 {!forAssignment && effectivePermissions.add && !isReadOnly && !showAddIcon && <Button startIcon={!showAddIcon ? null : <AddIcon />} onClick={onAdd} size="medium" variant="contained" className={classes.buttons} >{model?.customAddTextTitle ? model.customAddTextTitle : ` ${!showAddIcon ? "" : `${"Add"}`} ${model.title}`}</Button>}
                 {available && <Button startIcon={!showAddIcon ? null : <AddIcon />} onClick={onAssign} size="medium" variant="contained" className={classes.buttons}  >{"Assign"}</Button>}
@@ -643,12 +643,12 @@ const GridBase = memo(({
                 <GridToolbarContainer {...props}>
                     <GridToolbarColumnsButton />
                     <GridToolbarFilterButton />
-                    <Button startIcon={<FilterListOffIcon />} onClick={clearFilters} size="small">{model?.tTranslate("CLEAR FILTER", tOpts)}</Button>
+                    <Button startIcon={<FilterListOffIcon />} onClick={clearFilters} size="small">{model?.tTranslate("CLEAR FILTER", tOpts)}</Button>  
                     {effectivePermissions.export && (
                         <CustomExportButton handleExport={handleExport} showPivotExportBtn={model?.showPivotExportBtn} showOnlyExcelExport={model.showOnlyExcelExport} />
                     )}
                     {model.preferenceId &&
-                        <GridPreferences tTranslate={model?.tTranslate} preferenceName={model.preferenceId} gridRef={apiRef} columns={gridColumns} setIsGridPreferenceFetched={setIsGridPreferenceFetched} />
+                        <GridPreferences tTranslate={model?.tTranslate} preferenceName={model.preferenceId} gridRef={apiRef} columns={gridColumns} setIsGridPreferenceFetched={setIsGridPreferenceFetched} /> 
                     }
                 </GridToolbarContainer>
             </div >
@@ -820,7 +820,7 @@ const GridBase = memo(({
                     footer: {
                         pagination: true,
                         apiRef,
-                        tTranslate: model?.tTranslate
+                        tTranslate: model?.tTranslate 
                     },
                     panel: {
                         placement: "bottom-end"
